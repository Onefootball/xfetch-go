// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Fetchable is an autogenerated mock type for the Fetchable type
type Fetchable struct {
	mock.Mock
}

// Deserialize provides a mock function with given fields: reply
func (_m *Fetchable) Deserialize(reply interface{}) error {
	ret := _m.Called(reply)

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(reply)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ReadCmd provides a mock function with given fields:
func (_m *Fetchable) ReadCmd() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Serialize provides a mock function with given fields:
func (_m *Fetchable) Serialize() (interface{}, error) {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Unwrap provides a mock function with given fields:
func (_m *Fetchable) Unwrap() interface{} {
	ret := _m.Called()

	var r0 interface{}
	if rf, ok := ret.Get(0).(func() interface{}); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	return r0
}

// WriteCmd provides a mock function with given fields:
func (_m *Fetchable) WriteCmd() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
